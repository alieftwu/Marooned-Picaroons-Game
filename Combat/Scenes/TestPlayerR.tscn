[gd_scene load_steps=7 format=3 uid="uid://bhn5bvhkvnuh7"]

[ext_resource type="Texture2D" uid="uid://b1r13ed5vl8sh" path="res://Sprites/Pirates/Pirates Blue Sprite Sheet.png" id="2_pqj7h"]
[ext_resource type="Texture2D" uid="uid://cyr84b2yea5lt" path="res://Combat/Resources/healthbarUnder.png" id="3_keuwp"]
[ext_resource type="Texture2D" uid="uid://b0uq0yqd3fftn" path="res://Combat/Resources/healthbarProgress.png" id="4_gdi1t"]

[sub_resource type="GDScript" id="GDScript_p2gbp"]
script/source = "extends Node2D

@onready var battlemap = $\"../../BattleMap\"
@onready var highlightmap = $\"../../BattleMap/HighlightMap\"
@onready var abilityControl = $\"../../BattleMap/AbilityControl\"
@onready var healthBar = $HealthBar
@onready var statusEffect = $StatusEffect
var stats = load(\"res://Combat/Resources/playertest.tres\")
var speed : int
var health : float
var maxHealth : float
var armor : int
var basicAttackDamage : int
#changes passive abilities
var passiveAbility = {
	0: \"evasive\",
	1: \"Brawler\",
	2: \"Sniper\",
	3: \"leatherSkin\",
	4: \"evasive\",
	5: \"ShotPrediction\"
}

# buttons 2-4 abilities. can switch out
var abilityList = {
	0: [\"bombThrow\", \"axeToss\", \"quickStrike\"], #green pirate
	1: [\"heavySwordSwing\" , \"circleSlash\", \"recklessFrenzy\"], # pirate
	2: [\"pistolShot\" , \"rapidFire\", \"pirateBlessing\"], # pirate
	3: [\"engagingBlock\" , \"cannonShot\", \"desparateStrike\"], #red pirate
	4: [\"takeDown\" , \"pistolShot\", \"heavySwordSwing\"], #white pirate
	5: [\"pirateBlessing\", \"axeToss\", \"engagingBlock\"], #yellow pirate
} 
# look at abilityControl checkMoveSlot

var frenzyBuff : bool = false # used to determine when 2 turns are up
var frenzyBuffCount : int = 0
var isStunned : bool = false
var isStunnedCount : int = 0
var bonusMove = false
var isBlocking = false
var didBlock = false
signal finishedTurn

var canPress : bool = false
var special1CoolDown : int = 0 # can only attack when = 0, goes down at end of turn by 1
var special2CoolDown : int = 0 # can only attack when = 0, goes down at end of turn by 1
var special3CoolDown : int = 0 # can only attack when = 0, goes down at end of turn by 1

func _ready():
	speed = 3
	health = 100 * Global.statsMultiplier
	maxHealth = 100 * Global.statsMultiplier
	armor = 4 * Global.statsMultiplier
	basicAttackDamage = 15 * Global.statsMultiplier
	setAbilities(Global.PlayerSelect)
	setPassives(Global.PlayerSelect)

func play_turn():
	updateHealthBar()
	abilityControl.checkBlocking(self)
	isBlocking = false
	var skipTurn = await abilityControl.checkStun(self)
	updateStatusEffect()
	if skipTurn == false:
		await battlemap.updateButtons(self)
		await abilityControl.checkFlags(self)
		await battlemap.setAttackIconsDull() # make buttons dull
		await battlemap.movePerson(self)
		await battlemap.checkCooldownIcons(self) # updates buttons with cooldown icons
		canPress = true
		await battlemap.abilityFinished
		if bonusMove == true:
			bonusMove = false
			await battlemap.movePerson(self)
			print(\"bonusmove\")
	else:
		print(\"player is stunned!\")
	updateCooldowns()
	emit_signal(\"finishedTurn\")

func updateHealthBar():
	var maxValue = maxHealth
	healthBar.value = (health / maxHealth) * 100
	#print(\"new player health: \", (health / maxHealth) * 100)
	
func updateCooldowns():
	if special1CoolDown >= 1:
		special1CoolDown -= 1
	if special2CoolDown >= 1:
		special2CoolDown -= 1
	if special3CoolDown >= 1:
		special3CoolDown -= 1
	return

func updateStatusEffect():
	var effect
	if isStunned == true:
		effect = load(\"res://Combat/Resources/stunned.png\")
		statusEffect.texture = effect
	else:
		statusEffect.texture = null

func setAbilities(spriteIndex):
	if spriteIndex in abilityList:
		abilityList = abilityList[spriteIndex]
	else:
		#Default abilities
		abilityList = [\"rapidFire\", \"quickStrike\", \"pirateBlessing\"]

func setPassives(spriteIndex):
	if spriteIndex in passiveAbility:
		passiveAbility = passiveAbility[spriteIndex]
	else:
		#default passive
		print(\"main character setting to default passive\")
		passiveAbility = \"Brawler\"
"

[sub_resource type="AtlasTexture" id="AtlasTexture_v1mjp"]
atlas = ExtResource("2_pqj7h")
region = Rect2(16.529, 127.247, 16, 16)

[sub_resource type="GDScript" id="GDScript_xf6ae"]
script/source = "extends Sprite2D

var players = {
	0: preload(\"res://Art/Pirates/Pirate Green Sprite Sheet/Green Pirate Main Character.png\"),
	1: preload(\"res://Art/Pirates/Pirate Blue Sprite Sheet/Pirate Main Character.png\"),
	2: preload(\"res://Art/Pirates/Pirate Gray Sprite Sheet/Gray Pirate Main Character.png\"),
	3: preload(\"res://Art/Pirates/Pirate Red Sprite Sheet/red pirate companion.png\"),
	4: preload(\"res://Art/Pirates/Pirate White Sprite Sheet/White Pirate Main Character.png\"),
	5: preload(\"res://Art/Pirates/Pirate Yellow Sprite Sheet/Yellow Pirate Main Character.png\")
}
func _ready():
	self.texture = players[Global.PlayerSelect]
"

[node name="TestPlayer" type="Node2D" groups=["PlayerUnits", "Units"]]
script = SubResource("GDScript_p2gbp")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = SubResource("AtlasTexture_v1mjp")
hframes = 3
vframes = 8
script = SubResource("GDScript_xf6ae")

[node name="HealthBar" type="TextureProgressBar" parent="."]
offset_left = -8.0
offset_top = -11.0
offset_right = 56.0
offset_bottom = -1.0
scale = Vector2(0.25, 0.25)
value = 100.0
texture_under = ExtResource("3_keuwp")
texture_progress = ExtResource("4_gdi1t")

[node name="StatusEffect" type="TextureRect" parent="."]
offset_left = -4.0
offset_top = -7.0
offset_right = 36.0
offset_bottom = 33.0
scale = Vector2(0.22, 0.22)
