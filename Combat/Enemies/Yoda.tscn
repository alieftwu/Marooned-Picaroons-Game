[gd_scene load_steps=5 format=3 uid="uid://cmo57wxmnrwpi"]

[ext_resource type="Texture2D" uid="uid://bdn78owchvycs" path="res://Combat/Resources/Yoda.png" id="1_2m1u6"]
[ext_resource type="Texture2D" uid="uid://cyr84b2yea5lt" path="res://Combat/Resources/healthbarUnder.png" id="2_7drkc"]
[ext_resource type="Texture2D" uid="uid://b0uq0yqd3fftn" path="res://Combat/Resources/healthbarProgress.png" id="3_u2olx"]

[sub_resource type="GDScript" id="GDScript_mon1l"]
script/source = "extends Node2D

@onready var battlemap = $\"../../BattleMap\"
@onready var highlightmap = $\"../../BattleMap/HighlightMap\"
@onready var healthBar = $HealthBar
@onready var abilityControl = $\"../../BattleMap/AbilityControl\"
@onready var statusEffect = $StatusEffect
var stats = load(\"res://Combat/Resources/enemytest.tres\")
var speed : int
var health : float
var maxHealth : float
var armor : int
var basicAttackDamage : int
var passiveAbility : String = \"hardToHit\"
var abilityList : Array = [\"circleSlash\", \"damageWave\", \"quickStrike\"] # buttons 2-4 abilities. can switch out 
# look at abilityControl checkMoveSlot

var frenzyBuff : bool = false # used to determine when 2 turns are up
var frenzyBuffCount : int = 0
var isStunned : bool = false
var isStunnedCount : int = 0
var bonusMove = false
var isBlocking = false
var didBlock = false
signal finishedTurn

var canPress : bool = false
var special1CoolDown : int = 0 # can only attack when = 0, goes down at end of turn by 1
var special2CoolDown : int = 0 # can only attack when = 0, goes down at end of turn by 1
var special3CoolDown : int = 0 # can only attack when = 0, goes down at end of turn by 1

func _ready():
	speed = 10
	health = 500
	maxHealth = 500
	armor = 5
	basicAttackDamage = 30

func play_turn():
	await updateHealthBar()
	await abilityControl.checkBlocking(self)
	isBlocking = false
	var skipTurn = await abilityControl.checkStun(self)
	await updateStatusEffect()
	if skipTurn == false:
		await abilityControl.checkFlags(self)
		#battlemap.setAttackIconsDull() # make buttons dull
		if randf() < 0.25:
			await battlemap.cowardEnemyMove(self)
			await abilityControl.damageWave(self)
		elif randf() < 0.33:
			await battlemap.agressiveEnemyMove(self)
			await abilityControl.circleSlash(self)
		else:
			await battlemap.agressiveEnemyMove(self)
			await abilityControl.quickStrike(self)
		#await battlemap.checkCooldownIcons(self) # updates buttons with cooldown icons
		#await battlemap.enemyRandomAbility(self)
	#await updateCooldowns()
	if bonusMove == true:
			bonusMove = false
			await battlemap.cowardEnemyMove(self)
			print(\"bonusmove\")
	emit_signal(\"finishedTurn\")

func updateHealthBar():
	var maxValue = maxHealth
	healthBar.value = (health / maxHealth) * 100
	#print(\"new enemy health: \", (health / maxHealth) * 100)
	
func updateCooldowns():
	if special1CoolDown >= 1:
		special1CoolDown -= 1
	if special2CoolDown >= 1:
		special2CoolDown -= 1
	if special3CoolDown >= 1:
		special3CoolDown -= 1
	return

func updateStatusEffect():
	var effect
	if isStunned == true:
		effect = load(\"res://Combat/Resources/stunned.png\")
		statusEffect.texture = effect
	else:
		statusEffect.texture = null
"

[node name="Yoda" type="Node2D" groups=["EnemyUnits", "Units"]]
script = SubResource("GDScript_mon1l")

[node name="Sprite2D" type="Sprite2D" parent="."]
position = Vector2(0, -1)
scale = Vector2(-0.017, 0.017)
texture = ExtResource("1_2m1u6")
flip_h = true

[node name="HealthBar" type="TextureProgressBar" parent="."]
offset_left = -9.0
offset_top = -11.0
offset_right = 55.0
offset_bottom = -0.999999
scale = Vector2(0.29, 0.29)
value = 100.0
texture_under = ExtResource("2_7drkc")
texture_progress = ExtResource("3_u2olx")

[node name="StatusEffect" type="TextureRect" parent="."]
offset_left = -4.0
offset_top = -7.0
offset_right = 36.0
offset_bottom = 33.0
scale = Vector2(0.22, 0.22)
